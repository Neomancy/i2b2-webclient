{"version":3,"sources":["definitionListing.js","modalLoad.js","modalSave.js","DefTable.js","tabs.js","App.js","reportWebVitals.js","index.js"],"names":["columns","field","headerName","minWidth","flex","sortable","editable","disableReorder","type","width","headerAlign","align","ExportDefList","_ref","id","rows","canRename","React","DataGrid","columnHeaderHeight","style","background","showCellVerticalBorder","density","disableColumnResize","initialState","pagination","paginationModel","page","pageSize","pageSizeOptions","modalStyle","position","top","left","transform","bgcolor","border","boxShadow","p","a11yProps","index","concat","rowsGlobal","name","create","Date","parse","edit","rowsLocal","TabPanel","props","children","value","other","_objectWithoutProperties","_excluded","Object","assign","role","hidden","aria-labelledby","Box","sx","Typography","ModalLoad","open","handleClose","_React$useState","_React$useState2","_slicedToArray","setValue","Modal","onClose","aria-describedby","variant","component","mt","marginBottom","className","flexGrow","display","Tabs","orientation","onChange","event","newValue","aria-label","borderRight","borderColor","Tab","label","Stack","spacing","direction","justifyContent","alignItems","margin","marginTop","Button","onClick","alert","ModalSave","sortingOrder","hideSortIcons","resizable","getActions","row","actions","demographic","order","push","GridActionsCellItem","icon","Tooltip","title","ArrowUpIcon","ArrowDownIcon","disableColumnMenu","disableColumnSorting","valueOptions","_ref2","constraint","aggregation","included","DataTable","_React$useState3","_React$useState4","showLoad","setLoadViz","handleLoadOpen","_React$useState5","_React$useState6","showSave","setSaveViz","_React$useState7","_React$useState8","cellModesModel","setCellModesModel","handleCellClick","params","isEditable","target","nodeType","currentTarget","contains","undefined","prevModel","ret","_objectSpread","keys","reduce","acc","_defineProperty","acc2","mode","GridCellModes","View","Edit","preventDefault","handleCellModesModelChange","newModel","tabChanger","height","padding","borderRadius","fontStyle","fontWeight","hideFooterSelectedRowCount","columnVisibilityModel","disableColumnSelector","onCellModesModelChange","onCellClick","onCellDoubleClick","sorting","sortModel","sort","CustomTabPanel","BasicTabs","handleChange","borderBottom","AppBar","color","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","createElement","StrictMode","console","log"],"mappings":"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","file":"static/js/main.29faa686.chunk.js","sourcesContent":["import * as React from 'react';\r\nimport {DataGrid} from \"@mui/x-data-grid\";\r\n\r\nconst columns = [\r\n    {\r\n        field: 'name',\r\n        headerName: 'Table Definition Name',\r\n        minWidth: 450,\r\n        flex:1,\r\n        sortable: true,\r\n        editable: true,\r\n        disableReorder: true,\r\n        type: 'string'\r\n    }, {\r\n        field: 'create',\r\n        headerName: 'Created',\r\n        width: 100,\r\n        sortable: true,\r\n        headerAlign: 'center',\r\n        align: 'center',\r\n        disableReorder: true,\r\n        type: 'date'\r\n    }, {\r\n        field: 'edit',\r\n        headerName: 'Edited',\r\n        width: 100,\r\n        sortable: true,\r\n        headerAlign: 'center',\r\n        align: 'center',\r\n        disableReorder: true,\r\n        type: 'date'\r\n    }, {\r\n        field: 'columns',\r\n        headerName: 'Columns',\r\n        width: 100,\r\n        sortable: true,\r\n        headerAlign: 'center',\r\n        align: 'center',\r\n        disableReorder: true,\r\n        type: 'number'\r\n    }\r\n];\r\n\r\n\r\n\r\nexport default function ExportDefList({id, rows, canRename}) {\r\n\r\n    columns[0].editable = canRename;\r\n\r\n    return (\r\n        <div id={id}>\r\n            <DataGrid\r\n                columnHeaderHeight={40}\r\n                style={{background:\"white\"}}\r\n                columns={columns}\r\n                rows={rows}\r\n                showCellVerticalBorder={true}\r\n                density={'compact'}\r\n                disableColumnResize={true}\r\n                // hideFooter={true}\r\n                // autoHeight={true}\r\n                initialState={{\r\n                    pagination: {\r\n                        paginationModel: { page: 0, pageSize: 4 },\r\n                    },\r\n                }}\r\n                pageSizeOptions={[4, 8, 16]}\r\n            ></DataGrid>\r\n        </div>\r\n    )\r\n}","import Modal from \"@mui/material/Modal\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Typography from \"@mui/material/Typography\";\r\n\r\nimport * as React from \"react\";\r\nimport { shadows } from '@mui/system';\r\nimport \"./css/modals.css\";\r\n\r\nimport ExportDefList from \"./definitionListing\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Stack from \"@mui/material/Stack\";\r\n\r\nimport Tabs from '@mui/material/Tabs';\r\nimport Tab from '@mui/material/Tab';\r\n\r\n\r\n\r\nconst modalStyle = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: '70%',\r\n    bgcolor: 'background.paper',\r\n    border: '2px solid #000',\r\n    boxShadow: 24,\r\n    p: 4,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `vertical-tab-${index}`,\r\n        'aria-controls': `vertical-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\n\r\nconst rowsGlobal = [\r\n    { id:1, name: \"Demographics\", create: new Date(Date.parse(\"01/01/23\")), edit: new Date(Date.parse(\"07/07/24\")), columns: 10},\r\n    { id:2, name: \"Covid Use Case\", create: new Date(Date.parse(\"04/05/23\")), edit: new Date(Date.parse(\"07/07/24\")), columns: 20},\r\n    { id:3, name: \"Demographics\", create: new Date(Date.parse(\"06/07/23\")), edit: new Date(Date.parse(\"07/07/24\")), columns: 25},\r\n    { id:4, name: \"Demographics2\", create: new Date(Date.parse(\"11/16/23\")), edit: new Date(Date.parse(\"07/07/24\")), columns: 11},\r\n];\r\n\r\nconst rowsLocal = [\r\n    { id:1, name: \"Nick's 1st Demographics run\", create: new Date(Date.parse(\"01/01/23\")), edit: new Date(Date.parse(\"07/07/24\")), columns: 10},\r\n    { id:2, name: \"Dummy test\", create: new Date(Date.parse(\"04/05/23\")), edit: new Date(Date.parse(\"07/07/24\")), columns: 20},\r\n    { id:3, name: \"Example 1\", create: new Date(Date.parse(\"06/07/23\")), edit: new Date(Date.parse(\"07/07/24\")), columns: 25},\r\n    { id:4, name: \"Example 2\", create: new Date(Date.parse(\"11/16/23\")), edit: new Date(Date.parse(\"07/07/24\")), columns: 11},\r\n    { id:5, name: \"COVID + GLP-1s\", create: new Date(Date.parse(\"01/01/23\")), edit: new Date(Date.parse(\"07/07/24\")), columns: 10},\r\n    { id:6, name: \"COVID + ACE2\", create: new Date(Date.parse(\"04/05/23\")), edit: new Date(Date.parse(\"07/07/24\")), columns: 20},\r\n    { id:7, name: \"NegCOVID + GLP-1s\", create: new Date(Date.parse(\"06/07/23\")), edit: new Date(Date.parse(\"07/07/24\")), columns: 25},\r\n    { id:8, name: \"NegCOVID + ACE2\", create: new Date(Date.parse(\"11/16/23\")), edit: new Date(Date.parse(\"07/07/24\")), columns: 11},\r\n    { id:9, name: \"Diabetes\", create: new Date(Date.parse(\"01/01/23\")), edit: new Date(Date.parse(\"07/07/24\")), columns: 10},\r\n    { id:10, name: \"Ashtma\", create: new Date(Date.parse(\"04/05/23\")), edit: new Date(Date.parse(\"07/07/24\")), columns: 20},\r\n    { id:11, name: \"COPD\", create: new Date(Date.parse(\"06/07/23\")), edit: new Date(Date.parse(\"07/07/24\")), columns: 25},\r\n    { id:12, name: \"opps (delete me)\", create: new Date(Date.parse(\"11/16/23\")), edit: new Date(Date.parse(\"07/07/24\")), columns: 11},\r\n    { id:13, name: \"Complex Stats Demo\", create: new Date(Date.parse(\"01/01/23\")), edit: new Date(Date.parse(\"07/07/24\")), columns: 10},\r\n    { id:14, name: \"testing 2\", create: new Date(Date.parse(\"04/05/23\")), edit: new Date(Date.parse(\"07/07/24\")), columns: 20},\r\n    { id:15, name: \"testing 1\", create: new Date(Date.parse(\"06/07/23\")), edit: new Date(Date.parse(\"07/07/24\")), columns: 25},\r\n    { id:16, name: \"test\", create: new Date(Date.parse(\"11/16/23\")), edit: new Date(Date.parse(\"07/07/24\")), columns: 11},\r\n];\r\n\r\n\r\n\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`vertical-tabpanel-${index}`}\r\n            aria-labelledby={`vertical-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box sx={{ p: 3 }}>\r\n                    <Typography>{children}</Typography>\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default function ModalLoad({open, handleClose}) {\r\n    const [value, setValue] = React.useState(0);\r\n    const handleChange = (event, newValue) => { setValue(newValue); };\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Modal\r\n            open={open}\r\n            onClose={handleClose}\r\n            aria-labelledby=\"modal-modal-title\"\r\n            aria-describedby=\"modal-modal-description\"\r\n        >\r\n            <Box sx={modalStyle}>\r\n                <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\r\n                    Load Table Definition\r\n                </Typography>\r\n                <Typography id=\"modal-modal-description\" sx={{mt: 2, marginBottom: \"1rem\"}}>\r\n                    Load an existing table definition from below. Loading a definition will overwrite any unsaved changes in the definition editor.\r\n                </Typography>\r\n                <Box\r\n                    className = {\"modalDefListBox\"}\r\n                    sx={{ flexGrow: 1, display: 'flex', boxShadow: 2 }}\r\n                >\r\n                    <Tabs\r\n                        orientation=\"vertical\"\r\n                        value={value}\r\n                        onChange={handleChange}\r\n                        aria-label=\"Vertical tabs example\"\r\n                        sx={{ borderRight: 1, borderColor: 'divider' }}\r\n                    >\r\n                        <Tab label=\"Shared Tables\" {...a11yProps(0)} />\r\n                        <Tab label=\"My Tables\" {...a11yProps(1)} />\r\n                    </Tabs>\r\n                    <TabPanel\r\n                        value={value}\r\n                        index={0}\r\n                        className={'modalTabPanel'}\r\n                    >\r\n                        <ExportDefList id={\"loadModalDefTableGlobal\"} rows={rowsGlobal} canRename={false}/>\r\n                    </TabPanel>\r\n                    <TabPanel\r\n                        value={value}\r\n                        index={1}\r\n                        className={'modalTabPanel'}\r\n                    >\r\n                        <ExportDefList id={\"loadModalDefTableLocal\"} rows={rowsLocal} canRename={true}/>\r\n                    </TabPanel>\r\n                </Box>\r\n                <Stack\r\n                    spacing={2}\r\n                    direction=\"row\"\r\n                    justifyContent=\"flex-end\"\r\n                    alignItems=\"center\"\r\n                    style={{width:\"100%\", margin:\"auto\", marginTop: \"16px\"}}\r\n                >\r\n                    <Button variant=\"outlined\" onClick={handleClose}>Cancel</Button>\r\n                    <Button variant=\"contained\" onClick={()=>alert(\"Load\")}>Load</Button>\r\n                </Stack>\r\n            </Box>\r\n        </Modal>\r\n    );\r\n}\r\n","import Modal from \"@mui/material/Modal\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport * as React from \"react\";\r\nimport ExportDefList from \"./definitionListing\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport Button from \"@mui/material/Button\";\r\n\r\nconst modalStyle = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: 600,\r\n    bgcolor: 'background.paper',\r\n    border: '2px solid #000',\r\n    boxShadow: 24,\r\n    p: 4,\r\n};\r\n\r\n\r\nexport default function ModalSave({open, handleClose}) {\r\n    return (\r\n        <Modal\r\n            open={open}\r\n            onClose={handleClose}\r\n            aria-labelledby=\"modal-modal-title\"\r\n            aria-describedby=\"modal-modal-description\"\r\n        >\r\n            <Box sx={modalStyle}>\r\n                <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\r\n                    Save Table Definition\r\n                </Typography>\r\n                <Typography id=\"modal-modal-description\" sx={{mt: 2}}>\r\n                    Enter a table definition name to save as or select from the list to overwrite.\r\n                </Typography>\r\n\r\n                <Stack\r\n                    spacing={2}\r\n                    direction=\"row\"\r\n                    justifyContent=\"flex-end\"\r\n                    alignItems=\"center\"\r\n                    style={{width:\"100%\", margin:\"auto\", marginTop: \"16px\"}}\r\n                >\r\n                    <Button variant=\"outlined\" onClick={handleClose}>Cancel</Button>\r\n                    <Button variant=\"contained\" onClick={()=>alert(\"save\")}>Save</Button>\r\n                </Stack>\r\n            </Box>\r\n        </Modal>\r\n    );\r\n}\r\n","import './css/tableDef.css';\r\nimport * as React from 'react';\r\nimport {\r\n    DataGrid,\r\n    GridActionsCellItem,\r\n    GridCellModes\r\n} from '@mui/x-data-grid';\r\n\r\nimport Stack from '@mui/material/Stack';\r\nimport Button from '@mui/material/Button';\r\n\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport ArrowUpIcon from '@mui/icons-material/ArrowUpward';\r\nimport ArrowDownIcon from '@mui/icons-material/ArrowDownward';\r\n\r\nimport ModalLoad from \"./modalLoad\";\r\nimport ModalSave from \"./modalSave\";\r\n\r\nconst columns = [\r\n    {\r\n        field: 'order',\r\n        headerName: 'order',\r\n        width: 1,\r\n        sortable: true,\r\n        sortingOrder: \"ASC\",\r\n        hideSortIcons: true,\r\n        disableReorder: true\r\n\r\n    },\r\n    {\r\n        field: 'reorder',\r\n        headerName: \"Ordering\",\r\n        width: \"80\",\r\n        resizable: false,\r\n        type: 'actions',\r\n        getActions: ({ row }) => {\r\n            let actions = [];\r\n            if (row.demographic) return actions;\r\n            if (row.order > 1) {\r\n                actions.push(\r\n                    <GridActionsCellItem\r\n                        icon={\r\n                            <Tooltip title=\"Move row up\">\r\n                                <ArrowUpIcon />\r\n                            </Tooltip>\r\n                        }\r\n                        label=\"Move row up\"\r\n                        onClick={() => alert(\"up\")}\r\n                    />\r\n                );\r\n            }\r\n            actions.push(\r\n                <GridActionsCellItem\r\n                    icon={\r\n                        <Tooltip title=\"Move row down\">\r\n                            <ArrowDownIcon />\r\n                        </Tooltip>\r\n                    }\r\n                    label=\"Move row down\"\r\n                    onClick={() => alert(\"down\") }\r\n                />\r\n            );\r\n            return actions;\r\n        }\r\n    },\r\n    {\r\n        field: \"included\",\r\n        headerName: \"Include\",\r\n        width: 70,\r\n        editable: true,\r\n        sortable: false,\r\n        type: \"boolean\",\r\n        resizable: false,\r\n        disableColumnMenu: true,\r\n        disableReorder: true,\r\n        hideSortIcons: true,\r\n        disableColumnSorting: true,\r\n        headerAlign: \"center\"\r\n    },\r\n    {\r\n        field: 'name',\r\n        headerName: 'Concept',\r\n        minWidth: 450,\r\n        flex:1,\r\n        sortable: false,\r\n        disableColumnSorting: true,\r\n        disableColumnMenu: false,\r\n    },\r\n    {\r\n        field: 'constraint',\r\n        headerName: 'Constraints',\r\n        width: 130,\r\n        resizable: false,\r\n        disableColumnMenu: true,\r\n        disableReorder: true,\r\n        disableColumnSorting: true,\r\n        display: \"flex\",\r\n        hideSortIcons: true,\r\n        sortable: false,\r\n//        headerAlign: \"center\"\r\n    }, {\r\n        field: 'aggregation',\r\n        headerName: 'Aggregation',\r\n        width: 300,\r\n        resizable: false,\r\n        disableColumnMenu: true,\r\n        disableReorder: true,\r\n        display: \"flex\",\r\n        hideSortIcons: true,\r\n        disableColumnSorting: true,\r\n        sortable: false,\r\n//        headerAlign: \"center\",\r\n        editable: true,\r\n        type: \"singleSelect\",\r\n        valueOptions: ({ row }) => {\r\n            if (row.demographic) {\r\n                return [\"Value\"];\r\n            } else {\r\n                return [\r\n                    \"Existence (Yes/No)\",\r\n                    \"Date (First)\",\r\n                    \"Date (Most Recent)\",\r\n                    \"Count\",\r\n                    \"All Concepts (Names/Text)\",\r\n                    \"Most Frequent Concept (Names/Text)\",\r\n                    \"All Concepts (Codes)\",\r\n                    \"Most Frequent Concept (Codes)\",\r\n                    \"Minimum Value\",\r\n                    \"Maximum Value\",\r\n                    \"Median Value\",\r\n                    \"Average Value\",\r\n                    \"Mode (Most Frequent Value)\",\r\n                    \"List of All Values\"\r\n                ];\r\n            }\r\n        }\r\n    }\r\n];\r\n\r\nconst rows = [\r\n    { order: 1, id:123, name: \"Patient Number\", constraint: \"\", aggregation:\"Value\", included:true, demographic: true},\r\n    { order: 2, id:122, name: \"Gender\", constraint: \"\", aggregation:\"Value\", included:true, demographic: true},\r\n    { order: 3, id:121, name: \"Age\", constraint: \"\", aggregation:\"Value\", included:true, demographic: true},\r\n    { order: 4, id:111, name: \"Race\", constraint: \"\", aggregation:\"Value\", included:false, demographic: true},\r\n    { order: 5, id:58, name: \"Ethnicity\", constraint: \"\", aggregation:\"Value\", included:false, demographic: true},\r\n    { order: 6, id:35, name: \"Vital Status\", constraint: \"\", aggregation:\"Value\", included:false, demographic: true},\r\n    { order: 7, id:36, name: \"Hemoglobin A1C (Test:mcsq-a1c)\", constraint: \"something here\", aggregation:\"Maximum Value\"},\r\n    { order: 8, id:25, name: \"Hemoglobin A1C (Test:mcsq-a1c)\", constraint: \"something here\", aggregation:\"Mode (Most Frequent Value)\"},\r\n    { order: 9, id:136, name: \"Hemoglobin A1C (Test:mcsq-a1c)\", constraint: \"something here\", aggregation:\"Date (Most Recent)\"},\r\n    { order: 10, id:125, name: \"Hemoglobin A1C (Test:mcsq-a1c)\", constraint: \"something here\", aggregation:\"Average Value\"}\r\n];\r\n\r\nexport default function DataTable(props) {\r\n    const [open, setOpen] = React.useState(false);\r\n    const handleOpen = () => setOpen(true);\r\n    const handleClose = () => setOpen(false);\r\n\r\n    const [showLoad, setLoadViz] = React.useState(false);\r\n    const handleLoadOpen = () => setLoadViz(true);\r\n    const handleLoadClose = () => setLoadViz(false);\r\n    const [showSave, setSaveViz] = React.useState(false);\r\n    const handleSaveOpen = () => setSaveViz(true);\r\n    const handleSaveClose = () => setSaveViz(false);\r\n\r\n\r\n\r\n\r\n    const [cellModesModel, setCellModesModel] = React.useState({});\r\n    const handleCellClick = React.useCallback(\r\n        (params, event) => {\r\n            if (!params.isEditable) return;\r\n            // Ignore portal\r\n            if (event.target.nodeType === 1 && !event.currentTarget.contains(event.target)) return;\r\n\r\n            if (params !== undefined) {\r\n                if (params.field === \"aggregation\" && params.row.demographic === true) {\r\n                    event.preventDefault();\r\n                    return;\r\n\r\n                }\r\n            }\r\n            setCellModesModel((prevModel) => {\r\n                let ret = {\r\n                    ...Object.keys(prevModel).reduce(\r\n                        (acc, id) => ({\r\n                            ...acc,\r\n                            [id]: Object.keys(prevModel[id]).reduce(\r\n                                (acc2, field) => ({\r\n                                    ...acc2,\r\n                                    [field]: {mode: GridCellModes.View},\r\n                                }),\r\n                                {},\r\n                            ),\r\n                        }),\r\n                        {},\r\n                    ),\r\n                    // Revert the mode of the other cells from other rows\r\n                    ...Object.keys(prevModel).reduce(\r\n                        (acc, id) => ({\r\n                            ...acc,\r\n                            [id]: Object.keys(prevModel[id]).reduce(\r\n                                (acc2, field) => ({\r\n                                    ...acc2,\r\n                                    [field]: {mode: GridCellModes.View},\r\n                                }),\r\n                                {},\r\n                            ),\r\n                        }),\r\n                        {},\r\n                    )\r\n                };\r\n\r\n                return {\r\n                    ...ret,\r\n                    [params.id]: {\r\n                        // Revert the mode of other cells in the same row\r\n                        ...Object.keys(prevModel[params.id] || {}).reduce(\r\n                            (acc, field) => ({ ...acc, [field]: { mode: GridCellModes.View } }),\r\n                            {},\r\n                        ),\r\n                        [params.field]: { mode: GridCellModes.Edit },\r\n                    },\r\n                };\r\n            });\r\n        },\r\n        [],\r\n    );\r\n\r\n    const handleCellModesModelChange = React.useCallback(\r\n        (newModel) => {\r\n            setCellModesModel(newModel);\r\n        },\r\n        [],\r\n    );\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <ModalLoad handleClose={handleLoadClose} open={showLoad}/>\r\n            <ModalSave handleClose={handleSaveClose} open={showSave}/>\r\n\r\n            <Stack\r\n                spacing={2}\r\n                direction=\"row\"\r\n                justifyContent=\"flex-end\"\r\n                alignItems=\"center\"\r\n                style={{width:\"76%\", margin:\"auto\", marginBottom: \"16px\"}}\r\n            >\r\n                <Button variant=\"contained\" onClick={handleLoadOpen}>Load Previous Definition</Button>\r\n                <Button variant=\"contained\" onClick={handleSaveOpen}>Save Current Definition</Button>\r\n                <Button variant=\"contained\" onClick={()=>props.props.tabChanger({},1)}>Request Export With This Definition</Button>\r\n            </Stack>\r\n            <div style={{ height:\"60%\", width: '76%', margin:\"auto\", background:\"#077cf982\", padding:\"5px\", borderRadius:\"5px\"}}>\r\n                <p style={{fontStyle:\"italic\", fontWeight:\"bold\"}}>Drag a concept onto the grid to add it to the list</p>\r\n                <DataGrid\r\n                    style={{background:\"white\"}}\r\n                    rows={rows}\r\n                    columns={columns}\r\n                    showCellVerticalBorder={true}\r\n                    hideFooterSelectedRowCount={true}\r\n                    columnVisibilityModel={{order: false}}\r\n                    disableColumnSelector={true}\r\n                    cellModesModel={cellModesModel}\r\n                    onCellModesModelChange={handleCellModesModelChange}\r\n                    onCellClick={handleCellClick}\r\n                    onCellDoubleClick={handleCellClick}\r\n                    initialState={{\r\n                        pagination: {\r\n                            paginationModel: { page: 0, pageSize: 4 },\r\n                        },\r\n                        sorting: {\r\n                            sortModel: [{field:'order',sort:'asc'}]\r\n                        }\r\n                    }}\r\n                    pageSizeOptions={[4, 8, 16]}\r\n                />\r\n                <Stack\r\n                    spacing={2}\r\n                    direction=\"row\"\r\n                    justifyContent=\"flex-begin\"\r\n                    alignItems=\"center\"\r\n                    style={{width:\"100%\", margin:\"auto\", marginBottom: \"4px\"}}\r\n                >\r\n                    <Button\r\n                        sx={{\r\n                            position:\"absolute\",\r\n                            transform: \"translate(10px, -75%)\"\r\n                        }}\r\n                        variant=\"outlined\"\r\n                        onClick={handleLoadOpen}\r\n                    >Preview Example Data</Button>\r\n                </Stack>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}","import * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Tabs from '@mui/material/Tabs';\r\nimport Tab from '@mui/material/Tab';\r\nimport Box from '@mui/material/Box';\r\nimport DataTable from \"./DefTable\";\r\n\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Typography from \"@mui/material/Typography\";\r\n\r\n\r\nfunction CustomTabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`simple-tabpanel-${index}`}\r\n            aria-labelledby={`simple-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && <Box sx={{ p: 3 }}>{children}</Box>}\r\n        </div>\r\n    );\r\n}\r\n\r\nCustomTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.number.isRequired,\r\n    value: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `simple-tab-${index}`,\r\n        'aria-controls': `simple-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\nexport default function BasicTabs() {\r\n    const [value, setValue] = React.useState(0);\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    return (\r\n        <Box sx={{ width: '100%' }}>\r\n            <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\r\n                <AppBar position=\"static\" color=\"default\">\r\n                    <Tabs value={value} onChange={handleChange} aria-label=\"basic tabs example\">\r\n                        <Tab label=\"Define Table\" {...a11yProps(0)} />\r\n                        <Tab label=\"Request Export\" {...a11yProps(1)} />\r\n                    </Tabs>\r\n                    <Typography\r\n                        style={{\r\n                            position:\"absolute\",\r\n                            top: \"12px\",\r\n                            fontWeight: \"bold\",\r\n                            left: \"50%\",\r\n                            transform: \"translate(-50%)\"\r\n                        }}\r\n                    >Data Export Tool</Typography>\r\n                </AppBar>\r\n            </Box>\r\n            <CustomTabPanel value={value} index={0}>\r\n                <DataTable props={{tabChanger: handleChange}}/>\r\n            </CustomTabPanel>\r\n            <CustomTabPanel value={value} index={1}>\r\n                Item Two\r\n            </CustomTabPanel>\r\n        </Box>\r\n    );\r\n}","import './App.css';\nimport * as React from 'react';\nimport BasicTabs from \"./tabs\";\nimport ExportDefList from \"./definitionListing\";\nimport DataTable from \"./DefTable\";\n\n\n\n\nfunction App() {\n\n    return (\n    <div className=\"App\">\n      <BasicTabs/>\n      {/*  <ExportDefList></ExportDefList>*/}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(console.log);\n"],"sourceRoot":""}